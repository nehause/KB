<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kbbook.shop.modules.member.MemberMapper">

    <resultMap id="resultMapObj" type="com.kbbook.shop.modules.member.Member"></resultMap>
	
	<select id="selectList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
		SELECT
			a.*
		<include refid="selectCommon" />
		ORDER BY a.memberSeq DESC
		<include refid="Base.selectListLowerForMysql" />
	</select>
	
	<select id="selectSeq" resultMap="resultMapObj">
		SELECT
			a.*
		FROM member a
		WHERE 1=1
			AND	memberSeq = #{memberSeq}
	</select>
	
	<insert id ="insert">
		INSERT INTO member (
			id
			,password
			,name
			,userName
			,gender
			,dob
			,phone
			,number
			,email
			,emailStart
			,emailEnd
			,emailLast
			,zip
			,address1
			,address2
			,privacy
			,email_ctr
			,kakao_ctr
			,sms_ctr
			,accmulate
			,memberDelNy
			,memberUseNy
			,registration
		)
		VALUES (
			#{id}
			,#{password}
			,#{name}
			,#{userName}
			,#{gender}
			,#{dob}
			,#{phone}
			,#{number}
			,#{email}
			,#{emailStart}
			,#{emailEnd}
			,#{emailLast}
			,#{zip}
			,#{address1}
			,#{address2}
			,#{privacy}
			,#{email_ctr}
			,#{kakao_ctr}
			,#{sms_ctr}
			,0
			,0
			,1
			,#{registration}
		)
		<selectKey resultType="String" keyProperty="memberSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<update id="update">
		UPDATE member
		SET
			id = #{id}
			,password = #{password}
			,name = #{name}
			,userName = #{userName}
			,gender = #{gender}
			,dob = #{dob}
			,phone = #{phone}
			,number = #{number}
			,email = #{email}
			,emailStart = #{emailStart}
			,emailEnd = #{emailEnd}
			,emailLast = #{emailLast}
			,zip = #{zip}
			,address1 = #{address1}
			,address2 = #{address2}
			,privacy = #{privacy}
			,email_ctr = #{email_ctr}
			,kakao_ctr = #{kakao_ctr}
			,sms_ctr = #{sms_ctr}
			,accmulate = #{accmulate}
			,memberDelNy = #{memberDelNy}
			,memberUseNy = #{memberUseNy}
			,registration = #{registration}
						
		WHERE 1=1
			AND	memberSeq = #{memberSeq}
	</update>
	
	<update id = "uelete">
		UPDATE member
		SET
			memberDelNy = 1
		WHERE 1=1
			AND	memberSeq = #{memberSeq}
	</update>

	<delete id = "delete">
		DELETE 
		FROM member 
		WHERE 1=1 
			AND	memberSeq = #{memberSeq}
	</delete>
	
	<select id="selectListWithoutPaging" resultMap="resultMapObj">
		SELECT
			a.memberSeq
			,a.name
		FROM member a
		WHERE 1=1
			AND memberDelNy = 0
			AND memberUseNy = 1
		ORDER NY a.memberSeq DESC
	</select>
	
	<sql id="selectCommon">
		FROM member a
		WHERE 1=1
			<!-- AND memberDelNy = 0 -->
			<if test="searchDelNy != null and !searchDelNy.equals('')">AND memberDelNy = #{searchDelNy}</if>
			<if test="searchGender != null and !searchGender.equals('')">AND gender = #{searchGender}</if>
			<if test="searchPrivacy != null and !searchPrivacy.equals('')">AND privacy = #{searchPrivacy}</if>
			<choose>
				<when test="searchOption == 1">AND memberSeq = #{searchValue}</when>
				<when test="searchOption == 2">AND name LIKE CONCAT('%',#{searchValue},'%')</when>
				<when test="searchOption == 3">AND id LIKE CONCAT('%',#{searchValue},'%')</when>
				<when test="searchOption == 4">AND userName LIKE CONCAT('%',#{searchValue},'%')</when>
				<when test="searchOption == 5">AND email LIKE CONCAT('%',#{searchValue},'%')</when>
				<otherwise></otherwise>
			</choose>
	</sql>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon" />
	</select>
	
	<select id="selectOneId" resultMap="resultMapObj">
		SELECT
			memberSeq
			,id
		FROM
			member a
		WHERE 1=1
			AND id = #{id}
	</select>
	
	<select id="selectOneLogin" resultMap="resultMapObj">
		SELECT
			memberSeq
			,id
			,name
		FROM
			member a
		WHERE 1=1
			AND id = #{id}
			<if test="password != null and !password.equals('')">AND a.password = #{password}</if>
	</select>
	
	<select id="selectOneIdCheck" resultType="Integer">
		SELECT
			 COUNT(id) 
		FROM member
			WHERE id = #{id}
	</select>
	
	<select id="selectOneUserNameCheck" resultType="Integer">
		SELECT
			 COUNT(userName) 
		FROM member
			WHERE userName = #{userName}
	</select>
	
</mapper>	