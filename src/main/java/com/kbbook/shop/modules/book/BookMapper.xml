<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kbbook.shop.modules.book.BookMapper">

    <resultMap id="resultMapObj" type="com.kbbook.shop.modules.book.Book"></resultMap>

	<select id="selectWriter" resultMap="resultMapObj">
		SELECT
			a.book_bookSeq
			,a.writer_writerSeq
		FROM book_writer a
		JOIN book b on a.book_bookSeq = b.bookSeq
		WHERE 1=1
			AND bookSeq = #{bookSeq}
	
	</select>

	<select id="selectList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
		SELECT
			DISTINCT
			a.*
			, cost*(1-sale) as price
			,(SELECT
			case
			when count(c.name) = 1 then c.name
			when count(c.name) > 1 then concat(min(c.name) , ' 외 ' , cast(COUNT(name) as char)-1 , ' 명' )
			end
			FROM writer c
	        JOIN book_writer b on b.writer_writerSeq = c.writerSeq
	        where 1=1
				and  b.book_bookSeq = a.bookSeq 
	            ) as writer
			<include refid="selectCommon" />
			ORDER BY a.bookSeq DESC
			<include refid="Base.selectListLowerForMysql" />
	</select>
	
	<select id="userSelectList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
		SELECT
			a.*
			,cost*(1-sale) as price
		FROM book a
		WHERE 1=1
		<choose>
			<when test="searchOption == 1">ORDER BY bookSeq desc</when> <!-- 최신 등록순 -->
			<when test="searchOption == 2">ORDER BY dop desc</when>		<!-- 출간일 -->
			<when test="searchOption == 3">ORDER BY cost desc</when> 	<!-- 높은 가격순 -->
			<when test="searchOption == 4">ORDER BY cost asc</when>	<!-- 낮은 가격순 -->
			<when test="searchOption == 5">ORDER BY amount desc</when> 	<!-- 많이 구매된 순 -->
			<otherwise></otherwise>
		</choose>
		<include refid="Base.selectListLowerForMysql" />
	</select>
	
	<sql id ="selectCommon">
	FROM book a
	WHERE 1=1
		<if test="searchDelNy != null and !searchDelNy.equals('')">AND delNy = #{searchDelNy}</if>
		<choose>
			<when test="searchOption == 1">AND bookSeq = #{searchValue}</when>
			<when test="searchOption == 2">AND name LIKE CONCAT('%',#{searchValue},'%')</when>
			<when test="searchOption == 3">AND publisher LIKE CONCAT('%',#{searchValue},'%')</when>
			<when test="searchOption == 4">AND cost = #{searchValue}</when>
			<otherwise></otherwise>
		</choose>
	</sql>
	
	<select id="selectSeq" resultMap="resultMapObj">
		SELECT
			a.*
		FROM book a
		WHERE 1=1
			AND	bookSeq = #{bookSeq}
	</select>	
	
	<insert id="insert">
		INSERT INTO book(
			sign
			,name
			,subName
			,publisher
			,dop
			,cost
			,sale
			,accmulate
			,isbn
			,page
			,size
			,topic
			,introduce
			,image
			,list
			,content
			,rop
			,stock
			,amount
			,delNy
		)
		VALUES(
			#{sign}
			,#{name}
			,#{subName}
			,#{publisher}
			,#{dop}
			,#{cost}
			,#{sale}
			,#{accmulate}
			,#{isbn}
			,#{page}
			,#{size}
			,#{topic}
			,#{introduce}
			,#{image}
			,#{list}
			,#{content}
			,#{rop}
			,#{stock}
			,0
			,0
		)
		<selectKey resultType="String" keyProperty="bookSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<update id="update">
		UPDATE book
		SET
			sign = #{sign}
			,name = #{name}
			,subName = #{subName}
			,publisher = #{publisher}
			,dop = #{dop}
			,cost = #{cost}
			,sale = #{sale}
			,accmulate = #{accmulate}
			,isbn = #{isbn}
			,page = #{page}
			,size = #{size}
			,topic = #{topic}
			,introduce = #{introduce}
			,image = #{image}
			,list = #{list}
			,content = #{content}
			,rop = #{rop}
			,stock = #{stock}
			,amount = #{amount}
		WHERE 1=1
			AND	bookSeq = #{bookSeq}
	</update>
	
	<update id = "uelete">
		UPDATE book
		SET
			delNy = 1
		WHERE 1=1
			AND	bookSeq = #{bookSeq}
	</update>
	
	<delete id = "delete">
		DELETE 
		FROM book 
		WHERE 1=1 
			AND	bookSeq = #{bookSeq}
	</delete>
	
	<select id="selectListWithoutPaging" resultMap="resultMapObj">
		SELECT
			a.name
		FROM book a
		WHERE 1=1
			AND delNy = 0
		ORDER NY a.bookSeq DESC
	</select>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon" />
	</select>
	
	<select id="userSelectOneCount" resultType="Integer">
		SELECT COUNT(*)
		FROM book a
		WHERE 1=1
		<choose>
			<when test="searchOption == 1">ORDER BY bookSeq desc</when> <!-- 최신 등록순 -->
			<when test="searchOption == 2">ORDER BY dop desc</when>		<!-- 출간일 -->
			<when test="searchOption == 3">ORDER BY cost desc</when> 	<!-- 높은 가격순 -->
			<when test="searchOption == 4">ORDER BY cost asc</when>	<!-- 낮은 가격순 -->
			<when test="searchOption == 5">ORDER BY amount desc</when> 	<!-- 많이 구매된 순 -->
			<otherwise></otherwise>
		</choose>
	</select>
	
	<select id="bookSelectSeq" resultMap="resultMapObj">
		SELECT
			a.*
			,cost*(1-sale) as price
			,(SELECT
			case
			when count(c.name) = 1 then c.name
			when count(c.name) > 1 then concat(min(c.name) , ' 외 ' , cast(COUNT(name) as char)-1 , ' 명' )
			end
			FROM writer c
	        JOIN book_writer b on b.writer_writerSeq = c.writerSeq
	        where 1=1
				and  b.book_bookSeq = a.bookSeq 
	            ) as writer
		FROM book a
		WHERE 1=1
			AND	bookSeq = #{bookSeq}
	</select>	
	
	<select id="bookComment" resultMap="resultMapObj">
	select
		a.*
	    ,b.userName
	FROM book_comment a
	join member b on a.memberSeq = b.memberSeq
	where 1=1
	and book_bookSeq = #{bookSeq}
	order by time desc
	</select>
	<select id="commentAVG" resultMap="resultMapObj">
	select
		avg(grade) as gradeAVG
	FROM book_comment 
	where 1=1
	and book_bookSeq = #{bookSeq}
	</select>
	
	<select id="bookWriter" resultMap="resultMapObj">
	select
		a.*
	from writer a
	join book_writer b on a.writerSeq = b.writer_writerSeq
	where 1=1
	and book_bookSeq = #{bookSeq}
	</select>
	
	<select id="bookCommentCount"  resultType="Integer">
	select
		count(*)
	FROM book_comment
	where 1=1
	and book_bookSeq = #{bookSeq}
	</select>
	
	<insert id="commentInsert">
		INSERT INTO book_comment(
			book_bookSeq
			,memberSeq
			,grade
			,comment
		)
		VALUES(
			#{book_bookSeq}
			,#{memberSeq}
			,#{grade}
			,#{comment}
		)
		<selectKey resultType="String" keyProperty="book_commentSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	<delete id="commentDelete">
		DELETE 
		FROM book_comment 
		WHERE 1=1 
			AND	book_commentSeq = #{book_commentSeq}
	</delete>
	<select id="commentCheck" resultType="Integer">
		select
			count(*)
		from book_comment
		where 1=1
		and book_commentSeq = #{book_commentSeq}
		
	</select>
</mapper>	